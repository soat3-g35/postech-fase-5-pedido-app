From 19f2f189bc1cfd8b99c9195fd6b121517014a7e0 Mon Sep 17 00:00:00 2001
From: Leonara Martins <leonara.development@gmail.com>
Date: Sun, 7 Jul 2024 18:13:23 -0300
Subject: [PATCH] endpoint deleta cliente

---
 autoservico-db.yaml                           | 52 ++++++-------------
 .../application/gateways/ClienteGateway.java  |  2 +
 .../cliente/DeletaClienteInteractor.java      | 15 ++++++
 .../config/CategoriaBeanConfig.java           |  7 +++
 .../cliente/ClienteController.java            | 18 ++++---
 .../cliente/ClienteRepositoryGateway.java     | 11 ++++
 6 files changed, 63 insertions(+), 42 deletions(-)
 create mode 100644 src/main/java/br/com/fiap/pos/soat3/pedido/application/usecases/cliente/DeletaClienteInteractor.java

diff --git a/autoservico-db.yaml b/autoservico-db.yaml
index ff5bf00..567cfde 100644
--- a/autoservico-db.yaml
+++ b/autoservico-db.yaml
@@ -1,53 +1,35 @@
 services:
-  postgres: 
-    container_name: postgres
-    image: postgres:14-alpine
+  postgres:
+    image: postgres:14.3-alpine3.16
     ports:
       - "5432:5432"
     environment:
       POSTGRES_DB: autoservico
       POSTGRES_USER: local
       POSTGRES_PASSWORD: local
-      PGDATA: /var/lib/pg_data
+    restart: always
     volumes:
       - data:/var/lib/postgresql/data
-  api:
-    image: api-img
-    build:
-      context: ./
-      dockerfile: Dockerfile
-    expose: 
-      - 8080
-    ports:
-      - 8080:8080
-    environment:
-      POSTGRES_DB: autoservico
-      POSTGRES_USER: local
-      POSTGRES_PASSWORD: local
-    depends_on:
-      - postgres
     networks:
       - backend-postgres
-  
-  webhook-mock:
-    image: mockoon-changed
-    build:
-      context: ./k8s/mock/
-      dockerfile: Dockerfile
-    platform: linux/x86_64
-    hostname: webhook-mock
+
+  localstack:
+    image: localstack/localstack:latest
+    environment:
+      - AWS_DEFAULT_REGION=us-east-1
+      - EDGE_PORT=9325
+      - SERVICES=dynamodb,sqs
+      - AWS_ACCESS_KEY_ID=localstack
+      - AWS_SECRET_ACCESS_KEY=localstack
+      - KINESIS_PROVIDER=kinesalite
+      - DEFAULT_REGION=us-east-1
     ports:
-      - '9999:9999'
-    expose:
-      - 9999
-    command: -d /data -p 9999
+      - '9325:9325'
     volumes:
-      - ./src/main/resources/mockoon/webhook-mock.json:/data
-    networks:
-      - backend-postgres
+      - "${TMPDIR:-/tmp/localstack}:/tmp/localstack"
+      - "/var/run/docker.sock:/var/run/docker.sock"
 volumes:
   data:
     external: true
 networks:
   backend-postgres:
-    
diff --git a/src/main/java/br/com/fiap/pos/soat3/pedido/application/gateways/ClienteGateway.java b/src/main/java/br/com/fiap/pos/soat3/pedido/application/gateways/ClienteGateway.java
index abaa0e8..8e98ad0 100644
--- a/src/main/java/br/com/fiap/pos/soat3/pedido/application/gateways/ClienteGateway.java
+++ b/src/main/java/br/com/fiap/pos/soat3/pedido/application/gateways/ClienteGateway.java
@@ -6,4 +6,6 @@ public interface ClienteGateway {
     Cliente cadastraCliente(Cliente cliente);
 
     Cliente buscaClientePorCPF(String cpf);
+
+    Boolean deletaClientePorCPF(String cpf);
 }
diff --git a/src/main/java/br/com/fiap/pos/soat3/pedido/application/usecases/cliente/DeletaClienteInteractor.java b/src/main/java/br/com/fiap/pos/soat3/pedido/application/usecases/cliente/DeletaClienteInteractor.java
new file mode 100644
index 0000000..937b84f
--- /dev/null
+++ b/src/main/java/br/com/fiap/pos/soat3/pedido/application/usecases/cliente/DeletaClienteInteractor.java
@@ -0,0 +1,15 @@
+package br.com.fiap.pos.soat3.pedido.application.usecases.cliente;
+
+import br.com.fiap.pos.soat3.pedido.application.gateways.ClienteGateway;
+import br.com.fiap.pos.soat3.pedido.domain.entity.Cliente;
+public class DeletaClienteInteractor {
+    private final ClienteGateway clienteGateway;
+
+    public DeletaClienteInteractor(ClienteGateway clienteGateway) {
+        this.clienteGateway = clienteGateway;
+    }
+
+    public Boolean deletaCliente(String cpf) {
+        return clienteGateway.deletaClientePorCPF(cpf);
+    }
+}
diff --git a/src/main/java/br/com/fiap/pos/soat3/pedido/infrastructure/config/CategoriaBeanConfig.java b/src/main/java/br/com/fiap/pos/soat3/pedido/infrastructure/config/CategoriaBeanConfig.java
index 4d45d68..fb64b74 100644
--- a/src/main/java/br/com/fiap/pos/soat3/pedido/infrastructure/config/CategoriaBeanConfig.java
+++ b/src/main/java/br/com/fiap/pos/soat3/pedido/infrastructure/config/CategoriaBeanConfig.java
@@ -1,7 +1,9 @@
 package br.com.fiap.pos.soat3.pedido.infrastructure.config;
 
 import br.com.fiap.pos.soat3.pedido.application.gateways.CategoriaGateway;
+import br.com.fiap.pos.soat3.pedido.application.gateways.ClienteGateway;
 import br.com.fiap.pos.soat3.pedido.application.usecases.categoria.CadastraCategoriaInteractor;
+import br.com.fiap.pos.soat3.pedido.application.usecases.cliente.DeletaClienteInteractor;
 import br.com.fiap.pos.soat3.pedido.infrastructure.controllers.categoria.CategoriaDTOMapper;
 import br.com.fiap.pos.soat3.pedido.infrastructure.gateways.categoria.CategoriaEntityMapper;
 import br.com.fiap.pos.soat3.pedido.infrastructure.gateways.categoria.CategoriaRepositoryGateway;
@@ -31,4 +33,9 @@ public class CategoriaBeanConfig {
     CategoriaDTOMapper categoriaDTOMapper() {
         return new CategoriaDTOMapper();
     }
+
+    @Bean
+    DeletaClienteInteractor deletaClienteUseCase(ClienteGateway clienteGateway){
+        return new DeletaClienteInteractor(clienteGateway);
+    }
 }
diff --git a/src/main/java/br/com/fiap/pos/soat3/pedido/infrastructure/controllers/cliente/ClienteController.java b/src/main/java/br/com/fiap/pos/soat3/pedido/infrastructure/controllers/cliente/ClienteController.java
index bef2cae..b6b7d35 100644
--- a/src/main/java/br/com/fiap/pos/soat3/pedido/infrastructure/controllers/cliente/ClienteController.java
+++ b/src/main/java/br/com/fiap/pos/soat3/pedido/infrastructure/controllers/cliente/ClienteController.java
@@ -2,26 +2,24 @@ package br.com.fiap.pos.soat3.pedido.infrastructure.controllers.cliente;
 
 import br.com.fiap.pos.soat3.pedido.application.usecases.cliente.BuscaClientePorCPFInteractor;
 import br.com.fiap.pos.soat3.pedido.application.usecases.cliente.CadastraClienteInteractor;
+import br.com.fiap.pos.soat3.pedido.application.usecases.cliente.DeletaClienteInteractor;
 import br.com.fiap.pos.soat3.pedido.domain.entity.Cliente;
 import jakarta.validation.Valid;
 import org.springframework.http.ResponseEntity;
-import org.springframework.web.bind.annotation.GetMapping;
-import org.springframework.web.bind.annotation.PathVariable;
-import org.springframework.web.bind.annotation.PostMapping;
-import org.springframework.web.bind.annotation.RequestBody;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RestController;
+import org.springframework.web.bind.annotation.*;
 
 @RestController
 @RequestMapping("/clientes")
 public class ClienteController {
     private final CadastraClienteInteractor cadastraClienteUseCase;
     private final BuscaClientePorCPFInteractor buscaClientePorCPFUseCase;
+    private final DeletaClienteInteractor deletaClientePorCPFUseCase;
     private final ClienteDTOMapper clienteDTOMapper;
 
-    public ClienteController(CadastraClienteInteractor cadastraClienteUseCase, BuscaClientePorCPFInteractor buscaClientePorCPFUseCase, ClienteDTOMapper clienteDTOMapper) {
+    public ClienteController(CadastraClienteInteractor cadastraClienteUseCase, BuscaClientePorCPFInteractor buscaClientePorCPFUseCase, DeletaClienteInteractor deletaClientePorCPFUseCase, ClienteDTOMapper clienteDTOMapper) {
         this.cadastraClienteUseCase = cadastraClienteUseCase;
         this.buscaClientePorCPFUseCase = buscaClientePorCPFUseCase;
+        this.deletaClientePorCPFUseCase = deletaClientePorCPFUseCase;
         this.clienteDTOMapper = clienteDTOMapper;
     }
 
@@ -37,4 +35,10 @@ public class ClienteController {
         Cliente cliente = buscaClientePorCPFUseCase.bucaClientePorCPF(cpf);
         return ResponseEntity.ok(clienteDTOMapper.toResponse(cliente));
     }
+
+    @DeleteMapping
+    public String deletaCliente(@RequestBody ClienteRequest clienteRequest) {
+        Boolean cliente = deletaClientePorCPFUseCase.deletaCliente(clienteRequest.CPF());
+        return "Cliente deletado do banco de dados";
+    }
 }
diff --git a/src/main/java/br/com/fiap/pos/soat3/pedido/infrastructure/gateways/cliente/ClienteRepositoryGateway.java b/src/main/java/br/com/fiap/pos/soat3/pedido/infrastructure/gateways/cliente/ClienteRepositoryGateway.java
index d7bf020..3f816a0 100644
--- a/src/main/java/br/com/fiap/pos/soat3/pedido/infrastructure/gateways/cliente/ClienteRepositoryGateway.java
+++ b/src/main/java/br/com/fiap/pos/soat3/pedido/infrastructure/gateways/cliente/ClienteRepositoryGateway.java
@@ -40,4 +40,15 @@ public class ClienteRepositoryGateway implements ClienteGateway {
             throw new EntityNotFoundException("Cliente", cpf);
         }
     }
+
+    @Override
+    public Boolean deletaClientePorCPF(String cpf) {
+        Optional<ClienteEntity> clienteEntity = clienteRepository.findByCpf(cpf);
+        if (clienteEntity.isPresent()) {
+            clienteRepository.deleteById(clienteEntity.get().getId());
+            return true;
+        } else {
+            throw new EntityNotFoundException("Cliente", cpf);
+        }
+    }
 }
-- 
2.41.0

